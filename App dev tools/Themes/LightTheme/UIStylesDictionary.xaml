<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:buttons="clr-namespace:AppDevTools.Controls.Buttons"
                    xmlns:checkBoxs="clr-namespace:AppDevTools.Controls.CheckBoxs"
                    xmlns:menuItems="clr-namespace:AppDevTools.Controls.MenuItems"
                    xmlns:numericUpDowns="clr-namespace:AppDevTools.Controls.NumericUpDowns"
                    xmlns:repeatButtons="clr-namespace:AppDevTools.Controls.RepeatButtons"
                    xmlns:textBoxs="clr-namespace:AppDevTools.Controls.TextBoxs"
                    xmlns:toggleButtons="clr-namespace:AppDevTools.Controls.ToggleButtons"
                    xmlns:colorPicker="clr-namespace:ColorPicker;assembly=ColorPicker">
    
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/AppDevTools;component/Dictionaries/TextsDictionaries/Rus/TextsDictionary.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/AppDevTools;component/Themes/LightTheme/ColorsDictionary.xaml"/>
        <ResourceDictionary Source="pack://application:,,,/AppDevTools;component/Windows/Personalized window/PersonalizedWindowStylesDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!--#region VectorIconButton -->
    <Style x:Key="VectorIconButtoStandardStyle" TargetType="buttons:VectorIconButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconSize" Value="13"/>
        <Setter Property="VectorIconStretch" Value="UniformToFill"/>
        <Setter Property="VectorIconMargin" Value="3"/>
        <Setter Property="Text" Value="Button"/>
        <Setter Property="TextVisibility" Value="Visible"/>
        <Setter Property="TextMargin" Value="3, 0, 0, 0"/>
        <Setter Property="RoundingCorners" Value="5"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="buttons:VectorIconButton">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding RoundingCorners}">
                        <Grid 
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Icon" 
                                Grid.Column="0"
                                Visibility="{TemplateBinding VectorIconVisibility}"
                                Width="{TemplateBinding VectorIconSize}" 
                                Height="{TemplateBinding VectorIconSize}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <Path 
                                    Data="{TemplateBinding VectorIcon}"
                                    Fill="{TemplateBinding VectorIconFill}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stretch="{TemplateBinding VectorIconStretch}"
                                    Margin="{TemplateBinding VectorIconMargin}">
                                    <Path.RenderTransform >
                                        <ScaleTransform ScaleX="{TemplateBinding VectorIconScale}" ScaleY="{TemplateBinding VectorIconScale}"/>
                                    </Path.RenderTransform>
                                    <Path.RenderTransformOrigin>
                                        <Point X="0.5" Y="0.5"/>
                                    </Path.RenderTransformOrigin>
                                </Path>
                            </Border>
                            <TextBlock x:Name="Text" 
                                Grid.Column="1" 
                                Text="{TemplateBinding Text}"
                                TextAlignment="Left"
                                Foreground="{TemplateBinding Foreground}"
                                Visibility="{TemplateBinding TextVisibility}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding TextMargin}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VectorIcon" Value="{x:Null}">
                            <Setter Property="VectorIconVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="TextVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlMouseMoveLightBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VectorIconButtonAnimScaleStyle" TargetType="buttons:VectorIconButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconSize" Value="13"/>
        <Setter Property="VectorIconStretch" Value="UniformToFill"/>
        <Setter Property="VectorIconMargin" Value="3"/>
        <Setter Property="Text" Value="Button"/>
        <Setter Property="TextVisibility" Value="Visible"/>
        <Setter Property="TextMargin" Value="3, 0, 0, 0"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="buttons:VectorIconButton">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding RoundingCorners}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Icon" 
                                Grid.Column="0"
                                Visibility="{TemplateBinding VectorIconVisibility}"
                                Width="{TemplateBinding VectorIconSize}" 
                                Height="{TemplateBinding VectorIconSize}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <Path 
                                    Data="{TemplateBinding VectorIcon}"
                                    Fill="{TemplateBinding VectorIconFill}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stretch="{TemplateBinding VectorIconStretch}"
                                    Margin="{TemplateBinding VectorIconMargin}">
                                    <Path.RenderTransform >
                                        <ScaleTransform ScaleX="{TemplateBinding VectorIconScale}" ScaleY="{TemplateBinding VectorIconScale}"/>
                                    </Path.RenderTransform>
                                    <Path.RenderTransformOrigin>
                                        <Point X="0.5" Y="0.5"/>
                                    </Path.RenderTransformOrigin>
                                </Path>
                            </Border>
                            <TextBlock x:Name="Text" 
                                Grid.Column="1" 
                                Text="{TemplateBinding Text}"
                                TextAlignment="Left"
                                Foreground="{TemplateBinding Foreground}"
                                Visibility="{TemplateBinding TextVisibility}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding TextMargin}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VectorIcon" Value="{x:Null}">
                            <Setter Property="VectorIconVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="TextVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="RenderTransformOrigin">
                                <Setter.Value>
                                    <Point X="0.5" Y="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion VectorIconButton -->

    <!--#region VectorIconRepeatButton -->
    <Style x:Key="VectorIconRepeatButtonStandardStyle" TargetType="repeatButtons:VectorIconRepeatButton" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconSize" Value="13"/>
        <Setter Property="VectorIconStretch" Value="UniformToFill"/>
        <Setter Property="VectorIconMargin" Value="3"/>
        <Setter Property="Text" Value="RepeatButton"/>
        <Setter Property="TextVisibility" Value="Visible"/>
        <Setter Property="TextMargin" Value="3, 0, 0, 0"/>
        <Setter Property="RoundingCorners" Value="5"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="repeatButtons:VectorIconRepeatButton">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding RoundingCorners}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Icon" 
                                Grid.Column="0"
                                Visibility="{TemplateBinding VectorIconVisibility}"
                                Width="{TemplateBinding VectorIconSize}" 
                                Height="{TemplateBinding VectorIconSize}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <Path 
                                    Data="{TemplateBinding VectorIcon}"
                                    Fill="{TemplateBinding VectorIconFill}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stretch="{TemplateBinding VectorIconStretch}"
                                    Margin="{TemplateBinding VectorIconMargin}">
                                    <Path.RenderTransform >
                                        <ScaleTransform ScaleX="{TemplateBinding VectorIconScale}" ScaleY="{TemplateBinding VectorIconScale}"/>
                                    </Path.RenderTransform>
                                    <Path.RenderTransformOrigin>
                                        <Point X="0.5" Y="0.5"/>
                                    </Path.RenderTransformOrigin>
                                </Path>
                            </Border>
                            <TextBlock x:Name="Text" 
                                Grid.Column="1" 
                                Text="{TemplateBinding Text}"
                                TextAlignment="Left"
                                Foreground="{TemplateBinding Foreground}"
                                Visibility="{TemplateBinding TextVisibility}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding TextMargin}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VectorIcon" Value="{x:Null}">
                            <Setter Property="VectorIconVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="TextVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlMouseMoveLightBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VectorIconRepeatButtonSelectionIconStyle" TargetType="repeatButtons:VectorIconRepeatButton" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource ControlBackgroundDarkBrush}"/>
        <Setter Property="VectorIconSize" Value="13"/>
        <Setter Property="VectorIconStretch" Value="UniformToFill"/>
        <Setter Property="VectorIconMargin" Value="3"/>
        <Setter Property="Text" Value="RepeatButton"/>
        <Setter Property="TextVisibility" Value="Visible"/>
        <Setter Property="TextMargin" Value="3, 0, 0, 0"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="repeatButtons:VectorIconRepeatButton">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding RoundingCorners}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Icon" 
                                Grid.Column="0"
                                Visibility="{TemplateBinding VectorIconVisibility}"
                                Width="{TemplateBinding VectorIconSize}" 
                                Height="{TemplateBinding VectorIconSize}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <Path 
                                    Data="{TemplateBinding VectorIcon}"
                                    Fill="{TemplateBinding VectorIconFill}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stretch="{TemplateBinding VectorIconStretch}"
                                    Margin="{TemplateBinding VectorIconMargin}">
                                    <Path.RenderTransform >
                                        <ScaleTransform ScaleX="{TemplateBinding VectorIconScale}" ScaleY="{TemplateBinding VectorIconScale}"/>
                                    </Path.RenderTransform>
                                    <Path.RenderTransformOrigin>
                                        <Point X="0.5" Y="0.5"/>
                                    </Path.RenderTransformOrigin>
                                </Path>
                            </Border>
                            <TextBlock x:Name="Text" 
                                Grid.Column="1" 
                                Text="{TemplateBinding Text}"
                                TextAlignment="Left"
                                Foreground="{TemplateBinding Foreground}"
                                Visibility="{TemplateBinding TextVisibility}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding TextMargin}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VectorIcon" Value="{x:Null}">
                            <Setter Property="VectorIconVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="TextVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VectorIconRepeatButtonAnimScaleStyle" TargetType="repeatButtons:VectorIconRepeatButton" >
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconSize" Value="13"/>
        <Setter Property="VectorIconStretch" Value="UniformToFill"/>
        <Setter Property="VectorIconMargin" Value="3"/>
        <Setter Property="Text" Value="RepeatButton"/>
        <Setter Property="TextVisibility" Value="Visible"/>
        <Setter Property="TextMargin" Value="3, 0, 0, 0"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="repeatButtons:VectorIconRepeatButton">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="{TemplateBinding RoundingCorners}">
                        <Grid
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="Icon" 
                                Grid.Column="0"
                                Visibility="{TemplateBinding VectorIconVisibility}"
                                Width="{TemplateBinding VectorIconSize}" 
                                Height="{TemplateBinding VectorIconSize}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <Path 
                                    Data="{TemplateBinding VectorIcon}"
                                    Fill="{TemplateBinding VectorIconFill}"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Stretch="{TemplateBinding VectorIconStretch}"
                                    Margin="{TemplateBinding VectorIconMargin}">
                                    <Path.RenderTransform >
                                        <ScaleTransform ScaleX="{TemplateBinding VectorIconScale}" ScaleY="{TemplateBinding VectorIconScale}"/>
                                    </Path.RenderTransform>
                                    <Path.RenderTransformOrigin>
                                        <Point X="0.5" Y="0.5"/>
                                    </Path.RenderTransformOrigin>
                                </Path>
                            </Border>
                            <TextBlock x:Name="Text" 
                                Grid.Column="1" 
                                Text="{TemplateBinding Text}"
                                TextAlignment="Left"
                                Foreground="{TemplateBinding Foreground}"
                                Visibility="{TemplateBinding TextVisibility}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding TextMargin}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="VectorIcon" Value="{x:Null}">
                            <Setter Property="VectorIconVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="TextVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="RenderTransformOrigin">
                                <Setter.Value>
                                    <Point X="0.5" Y="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion VectorIconRepeatButton -->

    <!--#region VectorIconToggleButton -->
    <Style x:Key="VectorIconToggleButtonStandardStyle" TargetType="toggleButtons:VectorIconToggleButton">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIcon" Value="{DynamicResource ConfirmIcon}"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconStretch" Value="Uniform"/>
        <Setter Property="VectorIconMargin" Value="4"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="TextVisibility" Value="Visible"/>
        <Setter Property="Text" Value="ToggleButton"/>
        <Setter Property="TextMargin" Value="3, 0, 0, 0"/>
        <Setter Property="RoundingCorners" Value="5"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toggleButtons:VectorIconToggleButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="20"
                            Height="20"
                            CornerRadius="{TemplateBinding RoundingCorners}">
                            <Path x:Name="CheckMark" 
                                Grid.Column="0"
                                Data="{TemplateBinding VectorIcon}"
                                Visibility="{TemplateBinding VectorIconVisibility}"
                                Fill="{TemplateBinding VectorIconFill}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stretch="{TemplateBinding VectorIconStretch}"
                                Margin="{TemplateBinding VectorIconMargin}"/>
                        </Border>
                        <TextBlock x:Name="Text" 
                            Grid.Column="1" 
                            Text="{TemplateBinding Text}"
                            TextAlignment="Left"
                            Foreground="{TemplateBinding Foreground}"
                            Visibility="{TemplateBinding TextVisibility}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding TextMargin}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="TextVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VectorIconToggleButtonAnimScaleStyle" TargetType="toggleButtons:VectorIconToggleButton">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIcon" Value="{DynamicResource ConfirmIcon}"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconStretch" Value="Uniform"/>
        <Setter Property="VectorIconMargin" Value="4"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="TextVisibility" Value="Visible"/>
        <Setter Property="Text" Value="ToggleButton"/>
        <Setter Property="TextMargin" Value="3, 0, 0, 0"/>
        <Setter Property="RoundingCorners" Value="5"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="toggleButtons:VectorIconToggleButton">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="20"
                            Height="20"
                            CornerRadius="{TemplateBinding RoundingCorners}">
                            <Path x:Name="CheckMark" 
                                Grid.Column="0"
                                Data="{TemplateBinding VectorIcon}"
                                Visibility="{TemplateBinding VectorIconVisibility}"
                                Fill="{TemplateBinding VectorIconFill}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stretch="{TemplateBinding VectorIconStretch}"
                                Margin="{TemplateBinding VectorIconMargin}"/>
                        </Border>
                        <TextBlock x:Name="Text" 
                            Grid.Column="1" 
                            Text="{TemplateBinding Text}"
                            TextAlignment="Left"
                            Foreground="{TemplateBinding Foreground}"
                            Visibility="{TemplateBinding TextVisibility}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding TextMargin}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="TextVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Grid" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Grid" Property="RenderTransformOrigin">
                                <Setter.Value>
                                    <Point X="0.5" Y="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion VectorIconToggleButton -->

    <!--#region CheckBox -->
    <Style x:Key="VectorIconCheckBoxStandardStyle" TargetType="checkBoxs:VectorIconCheckBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIcon" Value="{DynamicResource ConfirmIcon}"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconStretch" Value="Uniform"/>
        <Setter Property="VectorIconMargin" Value="4"/>
        <Setter Property="IsChecked" Value="False"/>
        <Setter Property="TextVisibility" Value="Visible"/>
        <Setter Property="Text" Value="CheckBox"/>
        <Setter Property="TextMargin" Value="3, 0, 0, 0"/>
        <Setter Property="RoundingCorners" Value="5"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="checkBoxs:VectorIconCheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="20"
                            Height="20"
                            CornerRadius="{TemplateBinding RoundingCorners}">
                            <Path x:Name="CheckMark" 
                                Grid.Column="0"
                                Data="{TemplateBinding VectorIcon}"
                                Visibility="{TemplateBinding VectorIconVisibility}"
                                Fill="{TemplateBinding VectorIconFill}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Stretch="{TemplateBinding VectorIconStretch}"
                                Margin="{TemplateBinding VectorIconMargin}"/>
                        </Border>
                        <TextBlock x:Name="Text" 
                            Grid.Column="1" 
                            Text="{TemplateBinding Text}"
                            TextAlignment="Left"
                            Foreground="{TemplateBinding Foreground}"
                            Visibility="{TemplateBinding TextVisibility}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding TextMargin}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="TextVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxStandardStyle" TargetType="CheckBox">
        <Setter Property="Background" Value="{DynamicResource SubContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SubContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="Content" Value="CheckBox"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border"                           
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="15"
                            Height="15"
                            VerticalAlignment="Stretch"
                            HorizontalAlignment="Stretch"
                            Margin="3"
                            CornerRadius="7.5">
                            <Ellipse x:Name="CheckMark" 
                                Grid.Column="0"                                
                                Fill="{DynamicResource ControlSelectedBrush}"
                                Stroke="{DynamicResource SwitcherBorderBrush}"
                                StrokeThickness="1"
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch" 
                                Margin="1"/>
                        </Border>
                        <ContentPresenter Grid.Column="1"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxSwitchStyle" TargetType="checkBoxs:SwitcherCheckBox">
        <Setter Property="Background" Value="{DynamicResource SubContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SubContainerBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="TrackBorderThinckness" Value="1"/>
        <Setter Property="TrackWidth" Value="35"/>
        <Setter Property="TrackHeight" Value="15"/>
        <Setter Property="TrackRoundingCorners" Value="7.5"/>
        <Setter Property="SwitchBackground" Value="{DynamicResource SwitcherBackgroundBrush}"/>
        <Setter Property="SwitchBorderBrush" Value="{DynamicResource SwitcherBorderBrush}"/>
        <Setter Property="SwitchBorderThinckness" Value="1"/>
        <Setter Property="SwitchSize" Value="11"/>
        <Setter Property="SwitchMargin" Value="2, 0, 0, 0"/>
        <Setter Property="TextVisibility" Value="Visible"/>
        <Setter Property="Text" Value="CheckBox"/>
        <Setter Property="TextMargin" Value="3, 0, 0, 0"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="checkBoxs:SwitcherCheckBox">
                    <Grid
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid x:Name="CheckMark">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="Track"
                                Grid.ColumnSpan="2"
                                Fill="{TemplateBinding Background}"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeThickness="{TemplateBinding TrackBorderThinckness}"
                                Height="{TemplateBinding TrackHeight}"
                                Width="{TemplateBinding TrackWidth}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                RadiusX="{TemplateBinding TrackRoundingCorners}" 
                                RadiusY="{TemplateBinding TrackRoundingCorners}" 
                                IsHitTestVisible="False"/>
                            <Rectangle Height="{TemplateBinding Height}">
                                <Rectangle.Style>
                                    <Style TargetType="Rectangle">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation 
                                                                From="0" To="20" 
                                                                Duration="0:0:0.4" 
                                                                Storyboard.TargetProperty="Width"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation 
                                                                To="0" 
                                                                Duration="0:0:0.4" 
                                                                Storyboard.TargetProperty="Width"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Rectangle.Style>
                            </Rectangle>
                            <Ellipse x:Name="Switch"
                                Grid.Column="1"
                                Fill="{TemplateBinding SwitchBackground}"
                                Stroke="{TemplateBinding SwitchBorderBrush}"
                                StrokeThickness="1"
                                Height="{TemplateBinding SwitchSize}"
                                Width="{TemplateBinding SwitchSize}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="{TemplateBinding SwitchMargin}"/>
                        </Grid>
                        <TextBlock x:Name="Text" 
                            Grid.Column="1" 
                            Text="{TemplateBinding Text}"
                            TextAlignment="Left"
                            Foreground="{TemplateBinding Foreground}"
                            Visibility="{TemplateBinding TextVisibility}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="{TemplateBinding TextMargin}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Track" Property="Fill" Value="{DynamicResource TurnOnBrush}"/>
                        </Trigger>
                        <Trigger Property="Text" Value="{x:Null}">
                            <Setter Property="TextVisibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Track" Property="Opacity" Value="0.7"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity"  Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion CheckBox -->

    <!--#region TextBox -->
    <Style x:Key="TextBoxStandardStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ContextMenu" Value="{DynamicResource ContextMenuTextBox}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Focusable="{TemplateBinding Focusable}"
                        IsManipulationEnabled="{TemplateBinding IsManipulationEnabled}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        CornerRadius="5">
                        <ScrollViewer x:Name="PART_ContentHost" 
                            Foreground="{TemplateBinding Foreground}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="3, 0, 3, 0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelectionActive" Value="True">
                            <Setter Property="SelectionBrush" Value="{DynamicResource ControlSelectedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxHintStyle" TargetType="textBoxs:HintTextBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Hint" Value="Hint"/>
        <Setter Property="ContextMenu" Value="{DynamicResource ContextMenuTextBox}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="textBoxs:HintTextBox">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        CornerRadius="5">
                        <Grid>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                Grid.Column="0" 
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="3, 0, 3, 0"/>
                            <TextBlock x:Name="Hint" 
                                Grid.Column="0" 
                                Text="{TemplateBinding Hint}"
                                Foreground="{DynamicResource TextForegroundBrush}" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center" 
                                Margin="3, 0, 0, 0" 
                                Opacity="0.3"
                                Visibility="Collapsed" 
                                IsHitTestVisible="False"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Hint" Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="Text" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Hint" Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                            <Setter TargetName="Hint" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                            <Setter TargetName="Hint" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsSelectionActive" Value="True">
                            <Setter Property="SelectionBrush" Value="{DynamicResource ControlSelectedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TextBoxSearchStyle" TargetType="textBoxs:SearchingTextBox">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="Hint" Value="Hint"/>
        <Setter Property="ContextMenu" Value="{DynamicResource ContextMenuTextBox}"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="textBoxs:SearchingTextBox">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        CornerRadius="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ScrollViewer x:Name="PART_ContentHost" 
                                Grid.Column="0" 
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Margin="3, 0, 3, 0"/>
                            <TextBlock x:Name="Hint" 
                                Grid.Column="0" 
                                Text="{TemplateBinding Hint}"
                                Foreground="{DynamicResource TextForegroundBrush}"
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center"
                                Margin="3, 0, 0, 0" 
                                Opacity="0.3"
                                Visibility="Collapsed" 
                                IsHitTestVisible="False"/>
                            <Border
                                Grid.Column="1"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Stretch"
                                Margin="0, 1, 3, 1">
                                <Path x:Name="Icon"
                                    Data="{DynamicResource SearchIcon}" 
                                    Fill="{DynamicResource TextForegroundBrush}" 
                                    Stretch="Uniform"  
                                    HorizontalAlignment="Center" 
                                    VerticalAlignment="Center"
                                    Opacity="0.3">
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleX="3" ScaleY="3"/>
                                    </Path.RenderTransform>
                                    <Path.RenderTransformOrigin>
                                        <Point X="0.5" Y="0.5"/>
                                    </Path.RenderTransformOrigin>
                                </Path>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="False"/>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="IsStartedSearch" Value="False"/>
                                <Condition Property="IsFinded" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="IsStartedSearch" Value="False"/>
                                <Condition Property="IsFinded" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                                <Setter TargetName="Hint" Property="Opacity" Value="1"/>
                                <Setter TargetName="Icon" Property="Opacity" Value="1"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsStartedSearch" Value="False"/>
                                <Condition Property="IsFinded" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                                <Setter TargetName="Hint" Property="Visibility" Value="Collapsed"/>
                                <Setter TargetName="Icon" Property="Opacity" Value="1"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsStartedSearch" Value="True"/>
                                <Condition Property="IsFinded" Value="False"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ErrorBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="True"/>
                                <Condition Property="IsStartedSearch" Value="True"/>
                                <Condition Property="IsFinded" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Hint" Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused" Value="False"/>
                                <Condition Property="Text" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="Hint" Property="Visibility" Value="Visible"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                        <Trigger Property="IsSelectionActive" Value="True">
                            <Setter Property="SelectionBrush" Value="{DynamicResource ControlSelectedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion TextBox -->

    <!--#region NumericUpDown -->
    <Style x:Key="NumericUpDownStandardStyle" TargetType="numericUpDowns:NumericUpDown">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundDarkBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="Value" Value="0"/>
        <Setter Property="Minimum" Value="0"/>
        <Setter Property="Maximum" Value="10"/>
        <Setter Property="Increment" Value="1"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        CornerRadius="5">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBox 
                                x:Name="TextBox" 
                                Grid.Column="0"
                                Style="{DynamicResource TextBoxStandardStyle}"
                                Background="Transparent"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Text="{Binding Value, ElementName=Scrollbar, StringFormat={}{0:F0}, Mode=TwoWay}"
                                TextAlignment="Left"
                                Foreground="{TemplateBinding Foreground}"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch">
                                <TextBox.ContextMenu>
                                    <ContextMenu IsEnabled="False"/>
                                </TextBox.ContextMenu>
                            </TextBox>
                            <ScrollBar 
                                x:Name="Scrollbar" 
                                Grid.Column="1"
                                Template="{DynamicResource VerticalScrollBarWithOnlyUpDownScrollButtonsTemplate}"
                                Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Value, Mode=TwoWay}"
                                Minimum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Minimum, Mode=TwoWay}" 
                                Maximum="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Maximum, Mode=TwoWay}" 
                                SmallChange="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Increment, Mode=TwoWay}"                              
                                Orientation="Vertical"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Stretch" 
                                RenderTransformOrigin="0.5, 0.5">
                                <ScrollBar.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </ScrollBar.RenderTransform>
                            </ScrollBar>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion NumericUpDown -->

    <!--#region ComboBox -->
    <Style x:Key="ComboBoxStandardStyle" TargetType="ComboBox">
        <Style.Resources>

            <!--#region TextBox -->
            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox"/>
            <!--#endregion TextBox -->

            <!--#region ToggleButton -->
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
                <Border x:Name="Border" 
                    Grid.ColumnSpan="2" 
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="23"/>
                        </Grid.ColumnDefinitions>
                        <Path x:Name="Arrow" 
                            Grid.Column="1"
                            Data="{DynamicResource ArrowDownIcon}"
                            Fill="{TemplateBinding Foreground}"
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Center"
                            Margin="3, 0, 3, 0"/>
                    </Grid>
                </Border>
            </ControlTemplate>
            <!--#endregion ToggleButton -->

        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource ComboBoxItemStandardStyle}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel IsVirtualizing="True"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton"
                            Grid.Column="2"
                            Template="{DynamicResource ComboBoxToggleButton}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Foreground="{TemplateBinding Foreground}"
                            Focusable="False"                            
                            ClickMode="Press"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter Name="ContentSite" 
                            Content="{TemplateBinding SelectionBoxItem}" 
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            TextBlock.Foreground="{TemplateBinding Foreground}"
                            Margin="3, 0, 23, 0" 
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"                       
                            IsHitTestVisible="False" />
                        <TextBox x:Name="PART_EditableTextBox" 
                            Template="{DynamicResource ComboBoxTextBox}"
                            Background="Transparent"
                            Focusable="True"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="3, 0, 23, 0"/>
                        <Popup Name="Popup"
                            Focusable="False"
                            AllowsTransparency="True"
                            Placement="Bottom" 
                            PopupAnimation="Slide" 
                            IsOpen="{TemplateBinding IsDropDownOpen}">
                            <Grid Name="DropDown"  
                                MinWidth="{TemplateBinding ActualWidth}" 
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                SnapsToDevicePixels="True">
                                <Border x:Name="DropDownBorder"
                                    Background="{DynamicResource SubContainerBackgroundBrush}"
                                    BorderBrush="{DynamicResource SubContainerBorderBrush}"
                                    BorderThickness="1"
                                    Margin="0, 3, 0, 3"
                                    CornerRadius="5"/>
                                <ScrollViewer 
                                    Style="{DynamicResource ScrollViewerStandardStyle}"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    Margin="0, 3" 
                                    SnapsToDevicePixels="True">
                                    <StackPanel 
                                        Margin="1"
                                        IsItemsHost="True" 
                                        KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter Property="IsTabStop" Value="False"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ComboBox -->

    <!--#region ComboBoxItem -->
    <Style x:Key="ComboBoxItemStandardStyle" TargetType="ComboBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Margin="1"
                        CornerRadius="5">
                        <ContentPresenter Margin="3, 0, 3, 0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlMouseMoveLightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlSelectedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ComboBoxItem -->

    <!--#region ListBox -->
    <Style x:Key="VerticalListBoxStandardStyle" TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource ContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <StackPanel 
                            IsItemsHost="True" 
                            Orientation="Vertical"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VerticalListBoxWithOnlyUpDownScrollButtonsStyle" TargetType="ListBox">
        <Style.Resources>

            <!--#region ItemsScroller -->
            <ControlTemplate x:Key="ItemsScroller" TargetType="ScrollViewer">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <repeatButtons:VectorIconRepeatButton x:Name="LineUp" 
                        Grid.Row="0" 
                        Style="{DynamicResource VectorIconRepeatButtonSelectionIconStyle}"
                        VectorIcon="{DynamicResource ArrowUpIcon}" 
                        VectorIconSize="25"
                        VectorIconStretch="Uniform"
                        TextVisibility="Collapsed"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Command="ScrollBar.LineUpCommand"
                        Visibility="{Binding Path=ComputedVerticalScrollBarVisibility, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ScrollContentPresenter x:Name="Scroller" Grid.Row="1" 
                        Content="{TemplateBinding Content}"
                        CanContentScroll="{TemplateBinding CanContentScroll}"/>
                    <repeatButtons:VectorIconRepeatButton x:Name="LineDown"
                        Grid.Row="3"  
                        Style="{DynamicResource VectorIconRepeatButtonSelectionIconStyle}"
                        VectorIcon="{DynamicResource ArrowDownIcon}" 
                        VectorIconSize="25"
                        VectorIconStretch="Uniform"
                        TextVisibility="Collapsed"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Command="ScrollBar.LineDownCommand"
                        Visibility="{Binding Path=ComputedVerticalScrollBarVisibility, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Grid>
            </ControlTemplate>
            <!--#endregion ItemsScroller -->

        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource ContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border Grid.Row="2"
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        CornerRadius="5">
                        <ScrollViewer Template="{DynamicResource ItemsScroller}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HorizontalListBoxStandardStyle" TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource ContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <StackPanel 
                            IsItemsHost="True" 
                            Orientation="Horizontal"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExplorerListBoxStyle" TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource ContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <WrapPanel IsItemsHost="True"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ListBox -->

    <!--#region ListBoxItem -->
    <Style x:Key="ListBoxItemStandardStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border" 
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5" 
                        Margin="{TemplateBinding Margin}">
                        <ContentPresenter Margin="3, 0, 3, 0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlMouseMoveLightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlSelectedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemSelectionCheckMarkStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        Width="40"
                        Height="40"
                        Margin="{TemplateBinding Margin}">
                        <Grid>
                            <Border x:Name="CheckMark"
                                Panel.ZIndex="1"
                                Visibility="Hidden"
                                CornerRadius="0, 2, 0, 5"
                                Width="20"
                                Height="20"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Top">
                                <Path x:Name="CheckMarkIcon"
                                    Data="{DynamicResource ConfirmIcon}"
                                    Fill="{DynamicResource TextForegroundBrush}"
                                    Stretch="Uniform"                               
                                    Margin="3"/>
                            </Border>
                            <ContentPresenter Panel.ZIndex="0"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TextForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TextForegroundBrush}"/>
                            <Setter TargetName="CheckMark" Property="Background" Value="{DynamicResource TextForegroundBrush}"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="CheckMarkIcon" Property="Fill" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemNonSelectionStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        Margin="{TemplateBinding Margin}">
                        <ContentPresenter Margin="3, 0, 3, 0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListBoxItemAnimScaleStyle" TargetType="ListBoxItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5" 
                        Margin="{TemplateBinding Margin}">
                        <ContentPresenter Margin="3, 0, 3, 0"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="Border" Property="RenderTransformOrigin">
                                <Setter.Value>
                                    <Point X="0.5" Y="0.5"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ListBoxItem -->

    <!--#region ListView -->
    <Style x:Key="ListViewStandardStyle" TargetType="ListView">
        <Style.Resources>

            <!--#region GridViewScrollViewer -->
            <Style x:Key="GridViewScrollViewerStyle" TargetType="ScrollViewer">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ScrollViewer">
                            <Grid Background="{TemplateBinding Background}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                </Grid.RowDefinitions>
                                <DockPanel Margin="{TemplateBinding Padding}">
                                    <ScrollViewer 
                                        Focusable="False"
                                        DockPanel.Dock="Top"
                                        HorizontalScrollBarVisibility="Hidden"
                                        VerticalScrollBarVisibility="Hidden">
                                        <GridViewHeaderRowPresenter
                                            Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" 
                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                    <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"                                      
                                        CanContentScroll="True"
                                        CanHorizontallyScroll="False"
                                        CanVerticallyScroll="False"
                                        KeyboardNavigation.DirectionalNavigation="Local"/>
                                </DockPanel>
                                <Border Grid.Row="1" 
                                    Background="{DynamicResource SubContainerBackgroundBrush}" 
                                    BorderBrush="{DynamicResource SubContainerBorderBrush}" 
                                    BorderThickness="0, 1, 0, 0"
                                    Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                                    <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                        Template="{DynamicResource HorizontalScrollBarStandardTemplate}"
                                        Background="{DynamicResource ControlMouseMoveLightBrush}"
                                        Orientation="Horizontal"
                                        ViewportSize="{TemplateBinding ViewportWidth}"
                                        Value="{TemplateBinding HorizontalOffset}"
                                        Maximum="{TemplateBinding ScrollableWidth}"/>
                                </Border>
                                <Border Grid.Column="1" 
                                    Background="{DynamicResource SubContainerBackgroundBrush}" 
                                    BorderBrush="{DynamicResource SubContainerBorderBrush}" 
                                    BorderThickness="1, 0, 0, 0"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                                    <ScrollBar x:Name="PART_VerticalScrollBar" 
                                        Template="{DynamicResource VerticalScrollBarStandardTemplate}"
                                        ViewportSize="{TemplateBinding ViewportHeight}"
                                        Value="{TemplateBinding VerticalOffset}"
                                        Maximum="{TemplateBinding ScrollableHeight}"/>
                                </Border>
                                <Border Grid.Column="1" Grid.Row="1"
                                    Background="{DynamicResource SubContainerBackgroundBrush}"
                                    HorizontalAlignment="Right" 
                                    VerticalAlignment="Bottom" 
                                    Width="18" 
                                    Height="18"
                                    Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion GridViewScrollViewer -->

        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource ContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer Style="{DynamicResource GridViewScrollViewerStyle}">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ListView -->

    <!--#region ListViewItem -->
    <Style x:Key="ListViewItemStandardStyle" TargetType="ListViewItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5"
                        Margin="3">
                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlSelectedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ListViewItem -->

    <!--#region GridViewColumnHeader -->
    <Style x:Key="GridViewColumnHeaderStandardStyle" TargetType="GridViewColumnHeader">
        <Style.Resources>

            <!--#region GridViewColumnHeaderGripper -->
            <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
                <Setter Property="Width" Value="18"/>
                <Setter Property="Background" Value="{DynamicResource ControlBorderBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Thumb">
                            <Border 
                                Background="Transparent" 
                                Padding="{TemplateBinding Padding}">
                                <Rectangle 
                                    Fill="{TemplateBinding Background}" 
                                    HorizontalAlignment="Center" 
                                    Width="1"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion GridViewColumnHeaderGripper -->

        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Grid>
                        <Border x:Name="HeaderBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0, 0 ,0, 1"
                            Padding="2, 0, 2, 0">
                            <ContentPresenter x:Name="HeaderContent"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                Margin="0, 0, 0, 1"
                                RecognizesAccessKey="True"/>
                        </Border>
                        <Thumb x:Name="PART_HeaderGripper"
                            Style="{DynamicResource GridViewColumnHeaderGripper}"
                            HorizontalAlignment="Right"
                            Margin="0, 0, -9, 0"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource ControlMouseMoveLightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion GridViewColumnHeader -->

    <!--#region TabControl -->
    <Style x:Key="TabControlStandardStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource SubContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SubContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <WrapPanel x:Name="HeaderPanel" 
                            Grid.Row="0"                            
                            Panel.ZIndex="1"
                            Background="Transparent"
                            Orientation="Horizontal" 
                            HorizontalAlignment="Left"
                            Margin="2, 0, 2, -1"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1"/>
                        <Border x:Name="Border" 
                            Grid.Row="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0, 5, 5, 5"
                            KeyboardNavigation.TabNavigation="Local"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2">
                            <ContentPresenter x:Name="PART_SelectedContentHost"  
                                ContentSource="SelectedContent" 
                                Margin="4"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlColorPickerStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource SubContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SubContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <WrapPanel x:Name="HeaderPanel" 
                            Grid.Row="0"                            
                            Panel.ZIndex="1"
                            Background="Transparent"
                            Orientation="Horizontal" 
                            HorizontalAlignment="Right"
                            Margin="0, 0, 2, -1"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1"/>
                        <Border x:Name="Border" 
                            Grid.Row="1"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5, 0, 5, 5"
                            KeyboardNavigation.TabNavigation="Local"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2">
                            <ContentPresenter x:Name="PART_SelectedContentHost"  
                                ContentSource="SelectedContent" 
                                Margin="4"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlSingleRowStandardStyle" TargetType="TabControl">
        <Style.Resources>

            <!--#region TabScroller -->
            <ControlTemplate x:Key="TabScroller" TargetType="ScrollViewer">
                <Grid x:Name="HeaderPanel">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <repeatButtons:VectorIconRepeatButton x:Name="LeftButton" 
                        Grid.Column="1" 
                        Style="{DynamicResource VectorIconRepeatButtonSelectionIconStyle}"
                        VectorIcon="{DynamicResource ArrowLeftIcon}" VectorIconSize="20" 
                        VectorIconStretch="Uniform" VectorIconMargin="3"
                        TextVisibility="Collapsed"
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center"
                        Margin="3, 2, 3, 2"
                        RoundingCorners="10"
                        Command="ScrollBar.LineLeftCommand"
                        Visibility="{Binding Path=ComputedHorizontalScrollBarVisibility, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <ScrollContentPresenter x:Name="Scroller"
                        Grid.Column="2" 
                        Content="{TemplateBinding ScrollViewer.Content}"/>
                    <repeatButtons:VectorIconRepeatButton x:Name="RightButton" 
                        Grid.Column="3" 
                        Style="{DynamicResource VectorIconRepeatButtonSelectionIconStyle}"
                        VectorIcon="{DynamicResource ArrowRightIcon}" VectorIconSize="20" 
                        VectorIconStretch="Uniform" VectorIconMargin="3"
                        TextVisibility="Collapsed"
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center" 
                        Margin="3, 2, 3, 2"
                        RoundingCorners="10"
                        Visibility="{Binding Path=ComputedHorizontalScrollBarVisibility, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        Command="ScrollBar.LineRightCommand"/>
                </Grid>
            </ControlTemplate>
            <!--#endregion TabScroller -->

        </Style.Resources>
        <Setter Property="Background" Value="{DynamicResource SubContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SubContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabControl">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <ScrollViewer x:Name="HeaderPanel" 
                            Grid.Column="0" Grid.Row="0" 
                            Template="{DynamicResource TabScroller}"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Disabled"
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch"
                            Margin="6, 0, 0, -1">
                            <StackPanel 
                                IsItemsHost="True" 
                                Orientation="Horizontal"
                                KeyboardNavigation.TabIndex="1"/>
                        </ScrollViewer>
                        <Border x:Name="ContentPanel" 
                            Grid.Row="1" Grid.Column="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                            KeyboardNavigation.TabNavigation="Local"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                ContentSource="SelectedContent"
                                Content="{TemplateBinding SelectedContent}"
                                ContentTemplate="{TemplateBinding SelectedContentTemplate}"
                                ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
                                Margin="4"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion TabControl -->

    <!--#region TabItem -->
    <Style x:Key="TabItemStandardStyle" TargetType="TabItem">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="0, 0, -2, 0"
                            CornerRadius="5, 5, 0, 0">
                            <ContentPresenter
                                ContentSource="Header"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Margin="12, 2, 12, 2"
                                RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlMouseMoveLightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlSelectedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion TabItem -->

    <!--#region ScrollViewer -->
    <Style x:Key="ScrollViewerStandardStyle" TargetType="ScrollViewer">
        <Setter Property="Background" Value="{DynamicResource SubContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SubContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CanContentScroll" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0"/>
                        <Border 
                            Grid.Column="1"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}">
                            <ScrollBar x:Name="PART_VerticalScrollBar" 
                                Grid.Column="1"
                                Template="{DynamicResource VerticalScrollBarStandardTemplate}"                                       
                                Width="18"
                                Height="Auto"
                                Orientation="Vertical" 
                                ViewportSize="{TemplateBinding ViewportHeight}"
                                Value="{TemplateBinding VerticalOffset}" 
                                Maximum="{TemplateBinding ScrollableHeight}"
                                ContextMenu="{DynamicResource ContextMenuVerticalScrollBar}"/>
                        </Border>
                        <Border 
                            Grid.Row="1" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}">
                            <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                Grid.Row="1"
                                Template="{DynamicResource HorizontalScrollBarStandardTemplate}"
                                Width="Auto"
                                Height="18"
                                Orientation="Horizontal" 
                                ViewportSize="{TemplateBinding ViewportWidth}"
                                Value="{TemplateBinding HorizontalOffset}" 
                                Maximum="{TemplateBinding ScrollableWidth}"
                                ContextMenu="{DynamicResource ContextMenuHorizontalScrollbar}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ScrollViewer -->

    <!--#region ScrollBar -->

    <!--#region ScrollBarThumb -->
    <Style x:Key="ScrollBarThumb" TargetType="Thumb">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundDarkBrush}"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Border x:Name="Border"
                         Background="{TemplateBinding Background}"
                         Width="Auto" 
                         Margin="3, 0, 3, 0"
                         CornerRadius="5"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseCaptured" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlMouseMoveDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ScrollBarThumb -->

    <!--#region ScrollBarPageButton -->
    <Style x:Key="ScrollBarPageButton" TargetType="RepeatButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Visibility" Value="Visible"/>
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ScrollBarPageButton -->

    <!--#region VerticalScrollBar -->
    <ControlTemplate x:Key="VerticalScrollBarStandardTemplate" TargetType="ScrollBar">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <repeatButtons:VectorIconRepeatButton x:Name="LineUp"
                Grid.Row="0" 
                Style="{DynamicResource VectorIconRepeatButtonSelectionIconStyle}"
                VectorIcon="{DynamicResource ArrowUpIcon}" 
                VectorIconSize="18"
                VectorIconStretch="Uniform"
                TextVisibility="Collapsed"
                Width="18"
                Height="18"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="ScrollBar.LineUpCommand"/>
            <Track Name="PART_Track" 
                Grid.Row="1" 
                IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="PageUp"
                        Style="{DynamicResource ScrollBarPageButton}"
                        Command="ScrollBar.PageUpCommand"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{DynamicResource ScrollBarThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="PageDown"
                        Style="{DynamicResource ScrollBarPageButton}"
                        Command="ScrollBar.PageDownCommand"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <repeatButtons:VectorIconRepeatButton x:Name="LineDown"
                Grid.Row="3"  
                Style="{DynamicResource VectorIconRepeatButtonSelectionIconStyle}"
                VectorIcon="{DynamicResource ArrowDownIcon}" 
                VectorIconSize="18"
                VectorIconStretch="Uniform"
                TextVisibility="Collapsed"
                Width="18"
                Height="18"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="ScrollBar.LineDownCommand"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalScrollBarWithOnlyUpDownScrollButtonsTemplate" TargetType="ScrollBar">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="18" />
            </Grid.RowDefinitions>
            <repeatButtons:VectorIconRepeatButton x:Name="LineUp"
                Grid.Row="0" 
                Style="{DynamicResource VectorIconRepeatButtonSelectionIconStyle}"
                VectorIcon="{DynamicResource ArrowUpIcon}" 
                VectorIconSize="18"
                VectorIconStretch="Uniform"
                TextVisibility="Collapsed"
                Width="18"
                Height="18"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="ScrollBar.LineUpCommand"/>
            <Track Name="PART_Track" 
                Grid.Row="1" 
                IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="PageUp"
                        Style="{DynamicResource ScrollBarPageButton}"
                        Command="ScrollBar.PageUpCommand"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb 
                        x:Name="Thumb" 
                        Style="{DynamicResource ScrollBarThumb}"
                        Visibility="Hidden"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="PageDown"
                        Style="{DynamicResource ScrollBarPageButton}"
                        Command="ScrollBar.PageDownCommand"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <repeatButtons:VectorIconRepeatButton x:Name="LineDown"
                Grid.Row="3"  
                Style="{DynamicResource VectorIconRepeatButtonSelectionIconStyle}"
                VectorIcon="{DynamicResource ArrowDownIcon}" 
                VectorIconSize="18"
                VectorIconStretch="Uniform"
                TextVisibility="Collapsed"
                Width="18"
                Height="18"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="ScrollBar.LineDownCommand"/>
        </Grid>
    </ControlTemplate>
    <!--#endregion VerticalScrollBar -->

    <!--#region HorizontalScrollBar -->
    <ControlTemplate x:Key="HorizontalScrollBarStandardTemplate" TargetType="ScrollBar">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18"/>
                <ColumnDefinition Width="0.00001*"/>
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <repeatButtons:VectorIconRepeatButton x:Name="LineLeft"
                Grid.Column="0" 
                Style="{DynamicResource VectorIconRepeatButtonSelectionIconStyle}"
                VectorIcon="{DynamicResource ArrowLeftIcon}" 
                VectorIconSize="18"
                VectorIconStretch="Uniform"
                TextVisibility="Collapsed"
                Width="18"
                Height="18"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="ScrollBar.LineLeftCommand"/> 
            <Track Name="PART_Track" 
                Grid.Column="1" 
                IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton x:Name="PageLeft"
                        Style="{DynamicResource ScrollBarPageButton}"
                        Command="ScrollBar.PageLeftCommand"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{DynamicResource ScrollBarThumb}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton x:Name="PageRight"
                        Style="{DynamicResource ScrollBarPageButton}"
                        Command="ScrollBar.PageRightCommand"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <repeatButtons:VectorIconRepeatButton x:Name="LineRight"
                Grid.Column="3"  
                Style="{DynamicResource VectorIconRepeatButtonSelectionIconStyle}"
                VectorIcon="{DynamicResource ArrowRightIcon}" 
                VectorIconSize="18"
                VectorIconStretch="Uniform"
                TextVisibility="Collapsed"
                Width="18"
                Height="18"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Command="ScrollBar.LineRightCommand"/>
        </Grid>
    </ControlTemplate>
    <!--#endregion HorizontalScrollBar -->

    <!--#endregion ScrollBar -->

    <!--#region Menu -->
    <Style x:Key="MenuStandardStyle" TargetType="Menu">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Menu">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel 
                            IsItemsHost="True"
                            ClipToBounds="True"
                            Orientation="Horizontal"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Menu -->

    <!--#region ContextMenu -->
    <Style x:Key="ContextMenuStandardStyle" TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource SubContainerBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SubContainerBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="5">
                        <StackPanel 
                            IsItemsHost="True" 
                            KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ContextMenu x:Key="ContextMenuTextBox" Style="{DynamicResource ContextMenuStandardStyle}">
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIcon="{DynamicResource CutIcon}" VectorIconFill="{DynamicResource TextForegroundBrush}" 
            VectorIconSize="13" VectorIconStretch="UniformToFill" VectorIconMargin="0.5"
            Header="{DynamicResource CutDescription}"
            Margin="1"
            Command="ApplicationCommands.Cut"/>
        <menuItems:VectorIconMenuItem 
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIcon="{DynamicResource CopyIcon}" VectorIconFill="{DynamicResource TextForegroundBrush}" 
            VectorIconSize="13" VectorIconStretch="UniformToFill"
            Header="{DynamicResource CopyDescription}"
            Margin="1"
            Command="ApplicationCommands.Copy"/>
        <menuItems:VectorIconMenuItem 
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIcon="{DynamicResource PasteIcon}" VectorIconFill="{DynamicResource TextForegroundBrush}" 
            VectorIconSize="13" VectorIconStretch="Uniform" VectorIconMargin="0.5"
            Header="{DynamicResource PasteDescription}"
            Margin="1"
            Command="ApplicationCommands.Paste"/>
    </ContextMenu>

    <ContextMenu x:Key="ContextMenuVerticalScrollBar" Style="{DynamicResource ContextMenuStandardStyle}">
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource ScrollHereDescription}"
            Margin="1"
            Command="ScrollBar.ScrollHereCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <Separator Style="{DynamicResource SeparatorStandardStyle}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource ScrollToTopDescription}"
            Margin="1"
            Command="ScrollBar.ScrollToTopCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource ScrollToBottomDescription}"
            Margin="1"
            Command="ScrollBar.ScrollToBottomCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <Separator Style="{DynamicResource SeparatorStandardStyle}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource PageUpDescription}"
            Margin="1"
            Command="ScrollBar.PageUpCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource PageDownDescription}"
            Margin="1"
            Command="ScrollBar.PageDownCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <Separator Style="{DynamicResource SeparatorStandardStyle}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource LineUpDescription}"
            Margin="1"
            Command="ScrollBar.LineUpCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource LineDownDescription}"
            Margin="1"
            Command="ScrollBar.LineDownCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
    </ContextMenu>

    <ContextMenu x:Key="ContextMenuHorizontalScrollbar" Style="{DynamicResource ContextMenuStandardStyle}">
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource ScrollHereDescription}"
            Margin="1"
            Command="ScrollBar.ScrollHereCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <Separator Style="{DynamicResource SeparatorStandardStyle}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource ScrollToLeftEndDescription}"
            Margin="1"
            Command="ScrollBar.ScrollToLeftEndCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource ScrollToRightEndDescription}"
            Margin="1"
            Command="ScrollBar.ScrollToRightEndCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <Separator Style="{DynamicResource SeparatorStandardStyle}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource PageLeftDescription}"
            Margin="1"
            Command="ScrollBar.PageLeftCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource PageRightDescription}"
            Margin="1"
            Command="ScrollBar.PageRightCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <Separator Style="{DynamicResource SeparatorStandardStyle}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource LineLeftDescription}"
            Margin="1"
            Command="ScrollBar.LineLeftCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
        <menuItems:VectorIconMenuItem
            Template="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"
            VectorIconSize="13"
            Header="{DynamicResource LineRightDescription}"
            Margin="1"
            Command="ScrollBar.LineRightCommand"
            CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
    </ContextMenu>
    <!--#endregion ContextMenu -->

    <!--#region MenuItem -->

    <!--#region TopMenuItem with child items -->
    <ControlTemplate x:Key="TopMenuItemWithChildStandardTemplate" TargetType="menuItems:VectorIconMenuItem">
        <Border x:Name="Border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            Margin="{TemplateBinding Margin}"
            CornerRadius="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border x:Name="Icon" 
                    Grid.Column="0"
                    Visibility="{TemplateBinding VectorIconVisibility}"
                    Width="{TemplateBinding VectorIconSize}" 
                    Height="{TemplateBinding VectorIconSize}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Margin="6, 3, 0, 3">
                    <Path 
                        Data="{TemplateBinding VectorIcon}"
                        Fill="{TemplateBinding VectorIconFill}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Stretch="{TemplateBinding VectorIconStretch}"
                        Margin="{TemplateBinding VectorIconMargin}">
                        <Path.RenderTransform >
                            <ScaleTransform ScaleX="{TemplateBinding VectorIconScale}" ScaleY="{TemplateBinding VectorIconScale}"/>
                        </Path.RenderTransform>
                        <Path.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Path.RenderTransformOrigin>
                    </Path>
                </Border>
                <ContentPresenter x:Name="Header" 
                    Grid.Column="1"
                    ContentSource="Header" 
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Left"
                    Margin="6, 3, 6, 3"
                    RecognizesAccessKey="True"/>
                <Popup x:Name="Popup"
                    Focusable="False"
                    AllowsTransparency="True"
                    Placement="Bottom"
                    PopupAnimation="Fade"
                    IsOpen="{TemplateBinding IsSubmenuOpen}">
                    <Border x:Name="SubmenuBorder"
                        Background="{DynamicResource SubContainerBackgroundBrush}"
                        BorderBrush="{DynamicResource SubContainerBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <StackPanel 
                            Background="{DynamicResource SubContainerBackgroundBrush}"
                            Margin="1"
                            IsItemsHost="True"
                            ClipToBounds="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="VectorIcon" Value="{x:Null}">
                <Setter Property="VectorIconVisibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Header" Value="">
                <Setter TargetName="Header" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background"  Value="{DynamicResource ControlMouseMoveLightBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TopMenuItemWithChildStandardStyle" TargetType="menuItems:VectorIconMenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="Header" Value="TopMenuItem"/>
        <Setter Property="VectorIconSize" Value="13"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconStretch" Value="UniformToFill"/>
        <Setter Property="VectorIconMargin" Value="3"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource TopMenuItemWithChildStandardTemplate}"/>
    </Style>
    <!--#endregion TopMenuItem with child items -->

    <!--#region TopMenuItem wihout child items -->
    <ControlTemplate x:Key="TopMenuItemWihoutChildStandardTemplate" TargetType="menuItems:VectorIconMenuItem">
        <Border x:Name="Border"                         
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            Margin="{TemplateBinding Margin}"
            CornerRadius="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border x:Name="Icon" 
                    Grid.Column="0"
                    Visibility="{TemplateBinding VectorIconVisibility}"
                    Width="{TemplateBinding VectorIconSize}" 
                    Height="{TemplateBinding VectorIconSize}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Margin="6, 3, 0, 3">
                    <Path 
                        Data="{TemplateBinding VectorIcon}"
                        Fill="{TemplateBinding VectorIconFill}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Stretch="{TemplateBinding VectorIconStretch}"
                        Margin="{TemplateBinding VectorIconMargin}">
                        <Path.RenderTransform >
                            <ScaleTransform ScaleX="{TemplateBinding VectorIconScale}" ScaleY="{TemplateBinding VectorIconScale}"/>
                        </Path.RenderTransform>
                        <Path.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Path.RenderTransformOrigin>
                    </Path>
                </Border>
                <ContentPresenter x:Name="Header" 
                    Grid.Column="1"
                    ContentSource="Header" 
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Left"
                    Margin="6, 3, 6, 3"
                    RecognizesAccessKey="True"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="VectorIcon" Value="{x:Null}">
                <Setter Property="VectorIconVisibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="Header" Value="">
                <Setter TargetName="Header" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background"  Value="{DynamicResource ControlMouseMoveLightBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TopMenuItemWithoutChildStandardStyle" TargetType="menuItems:VectorIconMenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="Header" Value="TopMenuItem"/>
        <Setter Property="VectorIconSize" Value="13"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconStretch" Value="UniformToFill"/>
        <Setter Property="VectorIconMargin" Value="3"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource TopMenuItemWihoutChildStandardTemplate}"/>
    </Style>
    <!--#endregion TopMenuItem wihout child items -->

    <!--#region SubMenuItem with child items -->
    <ControlTemplate x:Key="SubMenuItemWithChildStandardTemplate" TargetType="menuItems:VectorIconMenuItem">
        <Border x:Name="Border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            Margin="{TemplateBinding Margin}"
            CornerRadius="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border x:Name="Icon" 
                    Grid.Column="0"
                    Visibility="{TemplateBinding VectorIconVisibility}"
                    Width="{TemplateBinding VectorIconSize}" 
                    Height="{TemplateBinding VectorIconSize}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Margin="6, 3, 0, 3">
                    <Path 
                        Data="{TemplateBinding VectorIcon}"
                        Fill="{TemplateBinding VectorIconFill}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Stretch="{TemplateBinding VectorIconStretch}"
                        Margin="{TemplateBinding VectorIconMargin}">
                        <Path.RenderTransform >
                            <ScaleTransform ScaleX="{TemplateBinding VectorIconScale}" ScaleY="{TemplateBinding VectorIconScale}"/>
                        </Path.RenderTransform>
                        <Path.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Path.RenderTransformOrigin>
                    </Path>
                </Border>
                <ContentPresenter x:Name="Header" 
                    Grid.Column="1"
                    ContentSource="Header" 
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Left"
                    Margin="6, 3, 6, 3"
                    RecognizesAccessKey="True"/>
                <TextBlock x:Name="Shotcut"
                    Grid.Column="2"
                    Text="{TemplateBinding InputGestureText}"
                    DockPanel.Dock="Right"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    Margin="6, 3, 6, 3"/>
                <Popup x:Name="Popup"
                    Focusable="False"
                    AllowsTransparency="True"
                    Placement="Right"
                    PopupAnimation="Fade"
                    HorizontalOffset="-4"
                    IsOpen="{TemplateBinding IsSubmenuOpen}">
                    <Border x:Name="SubmenuBorder"
                        Background="{DynamicResource SubContainerBackgroundBrush}"
                        BorderBrush="{DynamicResource SubContainerBorderBrush}"
                        BorderThickness="1"
                        CornerRadius="5"
                        SnapsToDevicePixels="True">
                        <StackPanel 
                            Background="{DynamicResource SubContainerBackgroundBrush}"
                            Margin="1"
                            IsItemsHost="True"
                            ClipToBounds="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle"/>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="VectorIcon" Value="{x:Null}">
                <Setter Property="VectorIconVisibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="Header" Value="">
                <Setter TargetName="Header" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="InputGestureText" Value="">
                <Setter TargetName="Shotcut" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0, 5, 0, 5"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background"  Value="{DynamicResource ControlMouseMoveLightBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SubMenuItemWithChildStandardStyle" TargetType="menuItems:VectorIconMenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="Header" Value="SubMenuItem"/>
        <Setter Property="VectorIconSize" Value="13"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconStretch" Value="UniformToFill"/>
        <Setter Property="VectorIconMargin" Value="3"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="3, 2, 3, 2"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource SubMenuItemWithChildStandardTemplate}"/>
    </Style>
    <!--#endregion SubMenuItem with childe items -->

    <!--#region SubMenuItem wihout child items -->
    <ControlTemplate x:Key="SubMenuItemWithoutChildStandardTemplate" TargetType="menuItems:VectorIconMenuItem">
        <Border x:Name="Border"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            Width="{TemplateBinding Width}"
            Height="{TemplateBinding Height}"
            Margin="{TemplateBinding Margin}"
            CornerRadius="5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Border x:Name="Icon" 
                    Grid.Column="0"
                    Visibility="{TemplateBinding VectorIconVisibility}"
                    Width="{TemplateBinding VectorIconSize}" 
                    Height="{TemplateBinding VectorIconSize}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Margin="6, 3, 0, 3">
                    <Path 
                        Data="{TemplateBinding VectorIcon}"
                        Fill="{TemplateBinding VectorIconFill}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Stretch="{TemplateBinding VectorIconStretch}"
                        Margin="{TemplateBinding VectorIconMargin}">
                        <Path.RenderTransform >
                            <ScaleTransform ScaleX="{TemplateBinding VectorIconScale}" ScaleY="{TemplateBinding VectorIconScale}"/>
                        </Path.RenderTransform>
                        <Path.RenderTransformOrigin>
                            <Point X="0.5" Y="0.5"/>
                        </Path.RenderTransformOrigin>
                    </Path>
                </Border>
                <ContentPresenter x:Name="Header" 
                    Grid.Column="1"
                    ContentSource="Header" 
                    VerticalAlignment="Center" 
                    HorizontalAlignment="Left"
                    Margin="6, 3, 6, 3"
                    RecognizesAccessKey="True"/>
                <TextBlock x:Name="Shotcut"
                    Grid.Column="2"
                    Text="{TemplateBinding InputGestureText}"
                    DockPanel.Dock="Right"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Right"
                    Margin="6, 3, 6, 3"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="VectorIcon" Value="{x:Null}">
                <Setter Property="VectorIconVisibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="Header" Value="">
                <Setter TargetName="Header" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="InputGestureText" Value="">
                <Setter TargetName="Shotcut" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="True">
                <Setter TargetName="Border" Property="Background"  Value="{DynamicResource ControlMouseMoveLightBrush}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="SubMenuItemWithoutChildStandardStyle" TargetType="menuItems:VectorIconMenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="Header" Value="SubMenuItem"/>
        <Setter Property="VectorIconSize" Value="13"/>
        <Setter Property="VectorIconFill" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="VectorIconStretch" Value="UniformToFill"/>
        <Setter Property="VectorIconMargin" Value="3"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="3, 2, 3, 2"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template" Value="{DynamicResource SubMenuItemWithoutChildStandardTemplate}"/>
    </Style>
    <!--#endregion SubMenuItem wihout child items -->

    <!--#endregion MenuItem -->

    <!--#region ProgressBar -->
    <Style x:Key="ProgressBarStandardStyle" TargetType="ProgressBar">
        <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                            <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                            <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                        </PointAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            CornerRadius="5"/>
                        <Rectangle x:Name="PART_Track" 
                            RadiusX="5" RadiusY="5"/>
                        <Grid x:Name="PART_Indicator" 
                            ClipToBounds="True" 
                            HorizontalAlignment="Left">
                            <Rectangle x:Name="Indicator"                            
                                Fill="{DynamicResource TurnOnBrush}"
                                RadiusX="5" RadiusY="5"
                                Margin="1"/>
                            <Rectangle x:Name="Animation"
                                Fill="{DynamicResource TurnOnBrush}"
                                RadiusX="5" RadiusY="5"
                                Margin="1"
                                RenderTransformOrigin="0.5, 0.5">
                                <Rectangle.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Rectangle.RenderTransform>
                            </Rectangle>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ProgressBar -->

    <!--#region ColorPicker -->
    <Style x:Key="ColorPickerStandardStyle" TargetType="UserControl">
        <Style.Resources>

            <!--#region Grid -->
            <Style TargetType="Grid">
                <Style.Triggers>
                    <Trigger Property="Name" Value="MainGrid">
                        <Setter Property="Background" Value="{DynamicResource ContainerBackgroundBrush}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--#endregion Grid -->

            <!--#region Label -->
            <Style TargetType="Label">
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}" />
            </Style>
            <!--#endregion Label -->

            <!--#region TextBox -->
            <Style TargetType="TextBox" BasedOn="{StaticResource TextBoxStandardStyle}">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundLightBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}" />
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="ContextMenu" Value="{DynamicResource ContextMenuTextBox}"/>
                <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
                <Setter Property="OverridesDefaultStyle" Value="True"/>
            </Style>
            <!--#endregion TextBox -->

            <!--#region ComboBox -->
            <Style TargetType="ComboBox" BasedOn="{StaticResource ComboBoxStandardStyle}"/>
            <!--#endregion ComboBox -->

            <!--#region TabControl -->
            <Style TargetType="TabControl" BasedOn="{StaticResource TabControlColorPickerStyle}"/>
            <!--#endregion TabControl -->

            <!--#region TabItem -->
            <Style TargetType="TabItem" BasedOn="{StaticResource TabItemStandardStyle}"/>
            <!--#endregion TabItem -->

            <!--#region ColorDisplay -->
            <Style TargetType="colorPicker:ColorDisplay">
                <Setter Property="CornerRadius" Value="5"/>
            </Style>
            <!--#endregion ColorDisplay -->

        </Style.Resources>
    </Style>
    <!--#endregion ColorPicker -->

    <!--#region Separator -->
    <Style x:Key="SeparatorStandardStyle" TargetType="Separator">
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBackgroundDarkBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="5, 0, 5, 0"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Height="{TemplateBinding Height}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion Separator -->

    <!--#region ToolTip -->
    <Style x:Key="ToolTipStandardStyle" TargetType="ToolTip">
        <Setter Property="Background" Value="{DynamicResource ToolTipBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ToolTipBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource TextForegroundBrush}"/>
        <Setter Property="Content">
            <Setter.Value>
                <TextBlock Text="ToolTip"/>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border 
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        CornerRadius="5">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Margin}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion ToolTip -->

</ResourceDictionary>